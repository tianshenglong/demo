<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinochem.dao.MatchPlacesMapper">
    <resultMap id="BaseResultMap" type="com.sinochem.model.MatchPlaces">
        <!--@mbggenerated-->
        <id column="place_id" jdbcType="INTEGER" property="placeId" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="enabled" jdbcType="DECIMAL" property="enabled" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sinochem.model.MatchPlaces">
        <!--@mbggenerated-->
        <result column="place_name" jdbcType="VARBINARY" property="placeName" />
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbggenerated-->
        place_id, create_time, enabled
    </sql>
    <sql id="Blob_Column_List">
        <!--@mbggenerated-->
        place_name
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        <!--@mbggenerated-->
        select 
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from match_places
        where place_id = #{placeId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbggenerated-->
        delete from match_places
        where place_id = #{placeId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.sinochem.model.MatchPlaces">
        <!--@mbggenerated-->
        insert into match_places (place_id, create_time, enabled, 
            place_name)
        values (#{placeId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{enabled,jdbcType=DECIMAL}, 
            #{placeName,jdbcType=VARBINARY})
    </insert>
    <insert id="insertSelective" parameterType="com.sinochem.model.MatchPlaces">
        <!--@mbggenerated-->
        insert into match_places
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="placeId != null">
                place_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
            <if test="placeName != null">
                place_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="placeId != null">
                #{placeId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=DECIMAL},
            </if>
            <if test="placeName != null">
                #{placeName,jdbcType=VARBINARY},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.sinochem.model.MatchPlaces">
        <!--@mbggenerated-->
        update match_places
        <set>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=DECIMAL},
            </if>
            <if test="placeName != null">
                place_name = #{placeName,jdbcType=VARBINARY},
            </if>
        </set>
        where place_id = #{placeId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sinochem.model.MatchPlaces">
        <!--@mbggenerated-->
        update match_places
        set create_time = #{createTime,jdbcType=TIMESTAMP},
            enabled = #{enabled,jdbcType=DECIMAL},
            place_name = #{placeName,jdbcType=VARBINARY}
        where place_id = #{placeId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sinochem.model.MatchPlaces">
        <!--@mbggenerated-->
        update match_places
        set create_time = #{createTime,jdbcType=TIMESTAMP},
            enabled = #{enabled,jdbcType=DECIMAL}
        where place_id = #{placeId,jdbcType=INTEGER}
    </update>
</mapper>